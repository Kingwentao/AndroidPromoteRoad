<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".constraintlayout.ConstraintLayoutDemo">

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="match_parent"
        android:layout_height="10dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintBottom_toBottomOf="@+id/imageView"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/imageView" />


    <!--基准线对齐  layout_constraintBaseline_toBaselineOf-->
    <TextView
        android:id="@+id/baseLine"
        android:layout_width="100dp"
        android:layout_height="50dp"
        android:gravity="center"
        android:text="99"
        android:textSize="25dp"
        app:layout_constraintStart_toStartOf="@+id/button"
        app:layout_constraintTop_toBottomOf="@+id/button" />

    <TextView
        android:id="@+id/baseLineTest"
        android:layout_width="50dp"
        android:layout_height="50dp"
        android:gravity="center"
        android:text="%"
        app:layout_constraintBaseline_toBaselineOf="@id/baseLine"
        app:layout_constraintStart_toEndOf="@+id/baseLine"
        app:layout_constraintTop_toBottomOf="@+id/button" />

    <!--角度定位-->
    <ImageView
        android:layout_width="50dp"
        android:layout_height="50dp"
        android:src="@drawable/avatar"
        app:layout_constraintCircle="@id/baseLineTest"
        app:layout_constraintCircleAngle="45"
        app:layout_constraintCircleRadius="150dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!--宽度约束-->
    <TextView
        android:id="@+id/constrainText"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="我的宽度会通过constrainedWidth属性会被约束"
        app:layout_constrainedWidth="true"
        app:layout_constraintEnd_toEndOf="@id/baseLine"
        app:layout_constraintStart_toStartOf="@+id/baseLine"
        app:layout_constraintTop_toBottomOf="@+id/baseLine" />

    <ImageView
        android:id="@+id/avatar"
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:src="@drawable/avatar"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/constrainText" />

    <!--偏向水平位置比例（0.0-1.0）：constraintHorizontal_bias-->
    <TextView
        android:id="@+id/bias"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="我长很长很长很长很长很长的文很长很长的文字constraintHorizontal_bias"
        app:layout_constrainedWidth="true"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toEndOf="@id/avatar"
        app:layout_constraintTop_toBottomOf="@+id/constrainText"
        app:layout_goneMarginStart="100dp" />

    <!-- goneMarginStart属性，使其不受约束布局的gone属性影响  -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="就算我左边的图片gone了，我的位置也不会变，因为我有goneMarginStart属性"
        app:layout_constrainedWidth="true"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/avatar"
        app:layout_constraintTop_toBottomOf="@+id/bias"
        app:layout_goneMarginStart="100dp" />

    <!-- 属性layout_constraintHorizontal_chainStyle="packed"可将
    互相依赖的多个控件绑定在一起来布局-->
    <TextView
        android:id="@+id/chainStyle1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="pack horizontal 1"
        app:layout_constraintEnd_toStartOf="@+id/chainStyle2"
        app:layout_constraintHorizontal_chainStyle="packed"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/avatar" />

    <TextView
        android:id="@+id/chainStyle2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="pack horizontal 2"
        app:layout_constraintEnd_toStartOf="@id/chainStyle3"
        app:layout_constraintStart_toEndOf="@id/chainStyle1"
        app:layout_constraintTop_toBottomOf="@+id/avatar" />

    <TextView
        android:id="@+id/chainStyle3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="pack horizontal 3"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/chainStyle2"
        app:layout_constraintTop_toBottomOf="@+id/avatar" />

    <!--通过constraintDimensionRatio属性控制控件的宽高比比率，
    比如设定宽长或长高值、宽和高比例，会自动计算出来另外一边的值-->
    <ImageView
        android:id="@+id/ratioImage"
        android:layout_width="100dp"
        android:layout_height="0dp"
        android:src="@drawable/avatar"
        app:layout_constraintDimensionRatio="2:1"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/chainStyle3" />

    <!-- Group可以把多个view的id存起来一起操作，比如显隐-->
    <androidx.constraintlayout.widget.Group
        android:id="@+id/group"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:constraint_referenced_ids="chainStyle1,chainStyle2,chainStyle3" />

    <!--属性Barrier可以把多个控件通过一条带方向的栏给隔在一起，
    这样其他控件可以去依赖这条栏，这样这个控件变化就不会影响到里面的控件位置-->
    <androidx.constraintlayout.widget.Barrier
        android:id="@+id/barrier"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:barrierDirection="end"
        app:constraint_referenced_ids="barrierText" />

    <TextView
        android:id="@+id/barrierText"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="i am barrier constraint--|"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/ratioImage" />

    <TextView
        android:id="@+id/barrierText2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="|--in barrier end"
        app:layout_constraintStart_toEndOf="@id/barrier"
        app:layout_constraintTop_toBottomOf="@+id/ratioImage" />

    <!--通过自定义控件，封装实现多个控件的动画-->
    <com.example.androidpromoteroad.constraintlayout.CircularRevealHelper
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:constraint_referenced_ids="avatar,ratioImage" />

    <!--Placeholder属性可以留个位置来显示之后设置进来的id控件-->
    <androidx.constraintlayout.widget.Placeholder
        android:id="@+id/placeHolder"
        android:layout_width="100dp"
        android:layout_height="100dp"
        app:layout_constraintTop_toBottomOf="@+id/barrierText2" />

</androidx.constraintlayout.widget.ConstraintLayout>